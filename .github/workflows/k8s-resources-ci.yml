name: Keycloak Operator Kubernetes Resources Release

on:
  workflow_dispatch:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
concurrency: keycloak-kubernetes-resources-release

env:
  JDK_VERSION: 11

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Calculate version
        id: version
        run: |
          echo "::set-output name=branch::${{github.ref_name}}"

          [ "${{github.ref_name}}" = "main" ] && \
            echo "::set-output name=version::latest" || \
            echo "::set-output name=version::${{github.ref_name}}"

      - name: Check version
        run: |
          echo "Branch: ${{steps.version.outputs.branch}}"
          echo "Version: ${{steps.version.outputs.version}}"

      - name: Update maven settings
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}

      - name: Cache Maven packages
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: cache-1-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Clone Keycloak
        uses: actions/checkout@v3
        with:
          repository: keycloak/keycloak
          path: keycloak
          ref: ${{steps.version.outputs.branch}}

      - name: Build operator artifacts
        working-directory: keycloak
        run: |
          mvn -P operator -pl operator -am clean install -DskipTests \
              -Dquarkus.kubernetes.deployment-target=kubernetes,openshift,minikube

      - name: Create kubernetes resources
        run: |
          rm -rf ${{steps.version.outputs.version}}
          mkdir -p ${{steps.version.outputs.version}}/kubernetes

          cp -r keycloak/operator/target/kubernetes/*.yml ${{steps.version.outputs.version}}/kubernetes

      # start minikube

      # install OLM:
      # curl -L https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.20.0/install.sh -o install.sh
      # chmod +x install.sh
      # ./install.sh v0.20.0

      # - name: Create OLM bundle
      #   run: |
      #     sudo snap install yq
      #     ./create-olm-bundle.sh ${{steps.version.outputs.version}} $(cat latest_version.txt)

      # this check can be performed only on sem ver versions?
      # - name: Test the OLM bundle
      #   run: |
      #     cp test-olm.sh ${{steps.version.outputs.version}}/olm
      #     cd ${{steps.version.outputs.version}}/olm
      #     ./test-olm.sh

      # - name: Create OLM catalog
      #   run: |
      #     ./create-olm-catalog.sh

      # install the catalog
      # kubectl apply -f catalog.yaml

      # eventually it will appear here:

      # kubectl get packagemanifest

      # Install ServiceAccount and RBAC things
      # yq e 'select(.apiVersion == "rbac.authorization.k8s.io/v1" or .kind == "ServiceAccount")' 17.0.0/kubernetes/kubernetes.yml | kubectl apply -f -

      # Finally install the operator:
      # kubectl apply -f operatorgroup.yaml
      # kubectl apply -f subscription.yaml

      # And debug from here ...
      # missing serviceAccountName now ...
      # Added, let see:
      # kubectl get subscriptions keycloak-operator -o json | jq '.status'

      # "error creating service account: : ServiceAccount \"\" is invalid: metadata.name: Required value: name or generateName is required"
      # check indentation of permissions/rules and it's semantics

      # still issues with the serviceAccount ... -> name is not picked up! -> fix it

      - name: Update the repository
        run: |
          git config --global user.email "andrea.peruffo1982@gmail.com"
          git config --global user.name "Andrea Peruffo"

          # Delete old tags
          git tag -d ${{steps.version.outputs.version}} | true
          git push --delete origin ${{steps.version.outputs.version}} | true

          # Update the main branch and tag it accordingly
          git add .
          git commit -m "Automatic update"
          git tag ${{steps.version.outputs.version}}
          git push origin HEAD:refs/heads/main --force
          git push origin ${{steps.version.outputs.version}}

      # Automatic PR
      - name: Clone community-operators
        uses: actions/checkout@v3
        with:
          repository: vmuzikar/community-operators
          path: community-operators

      - name: Automatic PR opening
        env:
          # here we need wider permissions
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          export ORIGIN_REPO="vmuzikar/community-operators"
          export FORK_REPO="andreaTP/community-operators"
          cd community-operators
          git remote add mine "https://andreaTP:${{ env.GITHUB_TOKEN }}@github.com/$FORK_REPO.git"
          git checkout -b keycloak-${{steps.version.outputs.version}}
          mkdir -p operators/keycloak-operator/${{steps.version.outputs.version}}
          cp -r ../${{steps.version.outputs.version}}/olm/* operators/keycloak-operator/${{steps.version.outputs.version}}/
          git add .
          git commit -m "Bump Keycloak operator to ${{steps.version.outputs.version}}"
          # WORKAROUND to make push works, check if it can be removed
          git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
          git push -u mine keycloak-${{steps.version.outputs.version}}
          gh pr create --title "Bump Keycloak operator to ${{steps.version.outputs.version}}" --fill --repo $ORIGIN_REPO
